class Solution(object):
    def findPeakElement(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        l=0
        r= len(nums)-1

        while l<=r:
            mid= (l+r)//2
            # check if the mid is peak
            
            if (mid == 0 or nums[mid] > nums[mid - 1]) and (mid == len(nums) - 1 or nums[mid] > nums[mid + 1]):    
                return mid
            #if mid is not a peak 
            #look to the left or right 
            #search left
            elif (mid>0 and nums[mid-1]> nums[mid]):
                r= mid-1
            #search on right 
            elif (mid<len(nums)-1 and nums[mid+1]> nums[mid]):
                l= mid+1   



               
