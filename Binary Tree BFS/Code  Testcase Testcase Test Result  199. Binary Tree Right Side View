from collections import deque
# Definition for a binary tree node.

# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def rightSideView(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        res=[]
        q= deque([root])

        while q:
            rightsided= None
            qlen= len(q)

            for i in range(qlen):
                node= q.popleft()
                if node:
                    rightsided= node
                    q.append(node.left)
                    q.append(node.right)
            if rightsided:
                res.append(rightsided.val)
        return res 

       
